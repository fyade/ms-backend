import * as process from 'process';
import { base } from '../src/util/base';

export const currentVersion = '0.0.01';

export const jwtConstants = {
  secret: '', // token 盐
  expireTime: 3600, // token 过期时间
};
export const VERIFICATION_CODE_EXPIRE_TIME = 60 * 10; // 登录验证码过期时间
export const SECRET_KEY = '' // 前端-后端接口敏感信息加密盐，注意需与前端保持一致
export const SECRET_KEY_HD_DB = '' // 后端-数据库敏感信息加密盐
export const SECRET_CON_PROJ_AUTH = ''; // 后端主项目-后端子项目请求信息加密盐

export const currentEnv = () => {
  const env = process.env.NODE_ENV || base.DEV;
  return config[env];
};

export const portFromCmd = process.env.PORT;
export const wsPortFromCmd = process.env.WS_PORT;
const mysqlConnectParam = '';
export const publicConfig = {
};
const config = {
  dev: {
    ...publicConfig,
    mode: base.DEV,
    port: portFromCmd || 8060,
    wsPort: wsPortFromCmd || 8061,
    staticRoot: '/static/file', // 静态资源转发 url 前缀
    redis: {
      host: 'localhost',
      port: 6379,
      password: '123456',
      database: 0,
    },
    database: {
      host: 'localhost',
      port: 3306,
      username: '',
      password: '',
      database: '',
      timezone: 'Asia/Shanghai',
    },
    file: {
      uploadPath: '', // 文件存放位置
      maxSizeOfFull: 1024 * 1024 * 10, // 允许上传的文件的最大体积
    },
    log: {
      logSavePath: '', // 日志文件位置
    },
    ifShowSwagger: true, // 是否开启 swagger 文档
    ifIgnoreVerificationCode: true, // 是否不校验登录验证码
    ifLogSQLExecutionTime: true, // 是否打印 sql 执行耗时
    prismaLogLevel: ['query', 'info', 'warn'], // prisma 日志等级
  },
  prod: {},
}

export function getMysqlUrlFromEnv(env: any): string {
  return `mysql://${env.database.username}:${env.database.password}@${env.database.host}:${env.database.port}/${env.database.database}`;
}
